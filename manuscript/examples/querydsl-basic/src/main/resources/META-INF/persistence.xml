<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
  xmlns="http://xmlns.jcp.org/xml/ns/persistence"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
    http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

  <persistence-unit name="demo-el" transaction-type="RESOURCE_LOCAL">

    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
    <!-- Classes should be specified in SE environment, and EclipseLink requires that -->
    <class>model00.Breed</class>
    <class>model00.Dog</class>
    <class>model00.Person</class>
    <class>model00.aliasdemo.EntityA</class>
    <class>model00.aliasdemo.EntityB</class>
    <class>model00.aliasdemo.EntityC</class>
    <class>model00.aliasdemo.EntityD</class>

    <!-- EclipseLink caches by default ALL. -->
    <shared-cache-mode>ALL</shared-cache-mode>

    <properties>
      <!-- javax.persistence properties work for both EclipseLink and Hibernate -->
      <!-- <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
      - not necessary, figured out from jdbc.url (must be on classpath of course)
      - the same goes for dialect settings of providers, they both can figure it out
       -->
      <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:demo-el"/>
      <property name="javax.persistence.jdbc.user" value="sa"/>
      <property name="javax.persistence.jdbc.password" value=""/>
      <property name="javax.persistence.schema-generation.database.action" value="create"/>

      <!-- EclipseLink specifics -->
      <!--<property name="eclipselink.ddl-generation" value="drop-and-create-tables"/>-->
      <property name="eclipselink.logging.parameters" value="true"/>
      <property name="eclipselink.logging.level" value="FINE"/>
    </properties>
  </persistence-unit>

  <persistence-unit name="demo-hib" transaction-type="RESOURCE_LOCAL">

    <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
    <!--
    Classes should be specified in SE environment, but Hibernate finds them automatically
    in the same JAR. If not, classpath is probably constructed differently and we need to
    add <class> elements from EclipseLink section.
    -->

    <!-- For Hibernate to cache we need this (or ENABLE_SELECTIVE or similar), default NONE -->
    <shared-cache-mode>ALL</shared-cache-mode>

    <properties>
      <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:demo-hib"/>
      <property name="javax.persistence.jdbc.user" value="sa"/>
      <property name="javax.persistence.jdbc.password" value=""/>
      <property name="javax.persistence.schema-generation.database.action" value="create"/>

      <!-- Hibernate specifics -->
      <!--<property name="hibernate.hbm2ddl.auto" value="update"/>-->
      <property name="hibernate.show_sql" value="true"/>
    </properties>
  </persistence-unit>
</persistence>
