-# Resources {#part-resources}

## Books {#resources-books}

{#bib-ddd}
[DDD] Eric Evans. *Domain-Driven Design*, Addison-Wesley Professional, 2003.

{#bib-hpjp}
[HPJP] Vlad Mihalcea. *High Performance Java Persistence*, Leanpub, 2017.
[Book site](https://leanpub.com/high-performance-java-persistence)

{#bib-jaa}
[JAA] Kirk Knoernschild. *Java Application Architecture: Modularity Patterns with Examples Using
OSGi*, Prentice Hall, 2012.

{#bib-jp}
[JP] Charlie Hunt, Binu John. *Java Performance*, Addison-Wesley, 2012.

{#bib-jpdg}
[JPDG] Scott Oaks. *Java Performance: The Definitive Guide*, O'Reilly, 2014.

{#bib-jpspec}
[JPspec] Java Persistence 2.1 Expert Group. *JSR 338: JavaTM Persistence API, Version 2.1*, Oracle,
2013. [Download](http://download.oracle.com/otndocs/jcp/persistence-2_1-fr-spec/index.html)

{#bib-poeaa}
[PoEAA] Martin Fowler. *Patterns of Enterprise Application Architecture*, Addison-Wesley, 2002.

{#bib-projpa2}
[ProJPA2] Mike Keith, Merrick Schincariol. *Pro JPA 2*, Apress Media, LLC, 2013.

{#bib-sdata}
[SData] Mark Pollack, Oliver Gierke, Thomas Risberg, Jon Brisbin, and Michael Hunger.
*Spring Data*, O'Reilly Media, Inc., 2011.

{#bib-sqlpe}
[SQLPE] Markus Winand. *SQL Performance Explained*, 2012.
[Book site](http://sql-performance-explained.com/)


## Online articles, blogs {#resources-blogs}

* Ted Neward's [The Vietnam of Computer Science](http://blogs.tedneward.com/post/the-vietnam-of-computer-science),
well-argued longer post about troubles with ORM
* Martin Fowler's stand on [ORM Hate](http://martinfowler.com/bliki/OrmHate.html)
* [ORM is an anti-pattern](http://seldo.com/weblog/2011/08/11/orm_is_an_antipattern), one of those reasonable blog posts on the topic
* [Flush and Clear: O/R Mapping Anti-Patterns](http://www.developerfusion.com/article/84945/flush-and-clear-or-mapping-antipatterns/)
* [The OpenSessionInView Antipattern](https://dzone.com/articles/opensessioninview-antipattern)
* [The Open Session In View Anti-Pattern](https://vladmihalcea.com/2016/05/30/the-open-session-in-view-anti-pattern)
* [A beginner's guide to JPA and Hibernate Cascade Types](https://vladmihalcea.com/2015/03/05/a-beginners-guide-to-jpa-and-hibernate-cascade-types)
* Martin Fowler's [Anemic Domain Model](http://www.martinfowler.com/bliki/AnemicDomainModel.html)
* [JPA 2.1 -- 12 features every developer should know](http://www.thoughts-on-java.org/jpa-21-overview)
* [Transaction strategies: Understanding transaction pitfalls](http://www.ibm.com/developerworks/java/library/j-ts1/)
* Spring, Data access with JDBC, [JdbcTemplate](http://docs.spring.io/spring/docs/current/spring-framework-reference/html/jdbc.html#jdbc-JdbcTemplate)
* Uncle Bob's [Make the Magic go away](https://blog.8thlight.com/uncle-bob/2015/08/06/let-the-magic-die.html)
* My own JPA related blog posts: https://virgo47.wordpress.com/tag/jpa


## Other online resources {#resources-other}

* Querydsl: http://www.querydsl.com/
* DataNucleus: http://www.datanucleus.org/
* jOOQ: http://www.jooq.org
* H2 database: http://h2database.com
* Groovy, [Working with a relational database](http://www.groovy-lang.org/databases.html)